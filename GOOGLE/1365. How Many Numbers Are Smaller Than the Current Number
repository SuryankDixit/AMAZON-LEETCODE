//1st solution- brute force time: O(n^2) space: O(1);
//2nd solution- using sort and hashmap time: O(nlogn) space: O(n);
//3rd solution(implemented)- using prefix sum: time: O(n) space: O(n);

class Solution {
public:
    vector<int> smallerNumbersThanCurrent(vector<int>& nums) {
        vector<int> a(101,0);
        vector<int> b(101,0);
        
        for(int i=0;i<nums.size();i++)
            a[nums[i]]++;               //Keeping count of each element ocurring in nums;
        
        for(int i=1;i<101;i++)
            b[i]=b[i-1]+a[i-1];         //storing result upto 100 position using prefix sum;
        
        for(int i=0;i<nums.size();i++)
            nums[i]=b[nums[i]];         //storing result in nums array to return;
        
        return nums;
    }
};
